// MODULARIZE MODULARLIZE MODULARIZE
// this is for the menu itself
.menu-btn {
  position: absolute;
  z-index: 1;
  right: 1rem;
  top: 1rem;
  height: 20px;
  width: 28px;
  cursor: pointer;
  // note we don't have to worry about importing/exporting the same way for mixins we create!
  @include transition-ease;

  // this creates the middle horizontal bar of the burger button
  &__burger {
    position: absolute;
    right: 0;
    top: 0.5rem;
    width: 28px;
    height: 3px;
    background: set-text-color($primary-color);
    @include transition-ease;

    // & for child
    // :: indicates this is a pseudo-element
    &::before {
      content: '';
      position: absolute;
      top: -8px;
      width: 28px;
      height: 3px;
      // note we're including the set-text-color and transition-ease functions we made here
      background: set-text-color($primary-color);
      @include transition-ease;
    }

    &::after {
      content: '';
      position: absolute;
      top: 8px;
      width: 28px;
      height: 3px;
      background: set-text-color($primary-color);
      @include transition-ease;
    }

    // this assigns the burger button an open class because we want it to transform when it opens
    &.open {
      transform: rotate(720deg);
      // this makes the middle-ling of the hamburger go transparent upon transforming
      background: transparent;

      // the goal is to turn it into an X symbol using the before and after bars
      &::before {
        transform: rotate(45deg) translate(5px, 8px);
      }

      &::after {
        transform: rotate(-45deg) translate(3px, -7px);
      }
    }
  }
}

.nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  opacity: 0.98;
  visibility: hidden;

  &.open {
    visibility: visible;
  }

  .menu-nav {
    display: flex;
    // use wrap here in case the content has weird heights
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    height: 100vh;
    // `overflow: hidden` hides the scrollers
    overflow: hidden;
    background: $primary-color;
    // gets rid of bullet points
    list-style-type: none;
    padding-right: 1rem;
    // this will make the position of the menu start off the page at the top
    // when we click the button we want it to come in from the top
    transform: translateY(-100%);
    @include transition-ease;

    &.open {
      transform: translateY(0);
    }

    &__item {
      // we want the menu to come down from the top but we want the menu *items* to come in from the side
      // we use 100vw because we want them initially completely off the page
      transform: translateX(100vw);
      @include transition-ease;

      &.open {
        transform: translateX(0);
      }

      // &.active > a {
      //   color: $secondary-color;
      // }
    }

    &__link {
      display: inline-block;
      font-size: 2rem;
      text-transform: uppercase;
      padding: 2rem 0;
      font-weight: 300;
      @include transition-ease;

      &:hover {
        color: $secondary-color;
      }
    }
  }
}

// this is like a for loop in JS!
@for $i from 1 through 6 {
  // this will iterate through the links and stagger each one as they come in
  .menu-nav__item:nth-child(#{$i}) {
    transition-delay: ($i * 0.1s) + 0.15s;
  }
}
